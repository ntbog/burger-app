{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","key","ingredients","i","push","length","Burger","buildControl","BuildControl","Label","label","Less","remove","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","map","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","igKey","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","inputIdentifiers","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","fetchedOrders","err","App","Orders","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cef4fe33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2S4TV\",\"BreadTop\":\"BurgerIngredient_BreadTop__131Vi\",\"Seeds1\":\"BurgerIngredient_Seeds1__2HdHY\",\"Seeds2\":\"BurgerIngredient_Seeds2__2NXXf\",\"Meat\":\"BurgerIngredient_Meat__2m6h9\",\"Cheese\":\"BurgerIngredient_Cheese__TrvZW\",\"Salad\":\"BurgerIngredient_Salad__3bwi-\",\"Bacon\":\"BurgerIngredient_Bacon__1NPBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3mPpZ\",\"Open\":\"SideDrawer_Open__2H2p0\",\"Close\":\"SideDrawer_Close__3qPwN\",\"Logo\":\"SideDrawer_Logo__dCJvo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__s5ktX\",\"Label\":\"BuildControl_Label__2sm_i\",\"Less\":\"BuildControl_Less__2e1ZM\",\"More\":\"BuildControl_More__1IBV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1F3nl\",\"Label\":\"Input_Label__1Ne0Z\",\"InputElement\":\"Input_InputElement__SDv5U\",\"Invalid\":\"Input_Invalid__2yJqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3Rqjh\",\"Logo\":\"Toolbar_Logo__1LNps\",\"DesktopOnly\":\"Toolbar_DesktopOnly__x2Fpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__6-HWX\",\"active\":\"NavigationItem_active__3vd9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3Ogbj\",\"OrderButton\":\"BuildControls_OrderButton__1zvxm\",\"enable\":\"BuildControls_enable__2cy1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2o03a\",\"Success\":\"Button_Success__3-Y_r\",\"Danger\":\"Button_Danger__1svSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2TZWe\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2SocZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1FLA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3ysas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__78A_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__UXoWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3xebG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2shp4\",\"load5\":\"Spinner_load5__23-wk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__lR227\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2cDjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__4jK0R\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        {/*must use burgerLogo instead of accessing path directly for webpack reasons*/}\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop}\r\n    onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n        if (props.open) {\r\n            attachedClasses = [classes.SideDrawer, classes.Open];\r\n        }\r\n    return (\r\n        <>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( (prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer \r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = []\r\n    for (let key in props.ingredients) {\r\n        for (let i = 0; i < props.ingredients[key]; i++) {\r\n            transformedIngredients.push(<BurgerIngredient key={key + i} type={key} />);\r\n        }\r\n    }\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.remove} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n        className={classes.More} \r\n        onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            remove={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class\r\n    componentWillUpdate() {\r\n        console.log('[Order Summary] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        const ingredientSummary = []\r\n        for (let igKey in this.props.ingredients) {\r\n            ingredientSummary.push(<li key={igKey}><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}</li>);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                //clear the error initially\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n        //interceptors if not cleaned will cause memory leaks\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n            console.log('j');\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <>\r\n                    <Modal \r\n                    show={this.state.error}\r\n                    modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-c91cf.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        // const sum = Object.keys(ingredients)\r\n        //     .map(igKey => {\r\n        //         return ingredients[igKey]\r\n        //     })\r\n        //     //gets the sum of all ingredients\r\n        //     .reduce((sum, el) => {\r\n        //         return sum + el;\r\n        //     }, 0);\r\n        let sum = 0\r\n        for (const key in ingredients) {\r\n            sum += ingredients[key];\r\n        }\r\n            \r\n        return sum > 0;\r\n    }\r\n\r\n\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            //evaluates to true or false\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price} />\r\n                </>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-c91cf.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        });\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess( response.data.name, orderData ));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail( error ));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement]\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig}\r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\n\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            \r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },    \r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        // stops from sending request to reload page and losing the burger\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            //normally you recalculate price on the server, not here\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        \r\n        this.props.onOrderBurger(order);\r\n\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifiers in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifiers].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value} \r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                { form }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\"/>\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n    \r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, orders: fetchedOrders});\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n\r\n            };\r\n            case actionTypes.SET_INGREDIENTS:\r\n                return {\r\n                    ...state,\r\n                    ingredients: {\r\n                        salad: action.ingredients.salad,\r\n                        bacon: action.ingredients.bacon,\r\n                        cheese: action.ingredients.cheese,\r\n                        meat: action.ingredients.meat\r\n                    },\r\n                    totalPrice: 4,\r\n                    error: false\r\n                };\r\n            case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n                return {\r\n                    ...state,\r\n                    error: true\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            };\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}